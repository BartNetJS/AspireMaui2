@page "/"

@inject IJSRuntime JSRuntime

<h1>Hello, world!</h1>

Welcome to your new app.

<button @onclick="StartMedia">Start Video and Audio</button>
<button @onclick="CaptureImage">Capture Image</button>

<div class="media-container">
    <video id="videoElement" autoplay></video>
    <audio id="audioElement" controls></audio>
    <canvas id="canvasElement" style="display:none;"></canvas>
    <img src="@imageUrl" alt="Captured Image" />
</div>

<script>
    async function startMedia() {
        try {
            const videoElement = document.getElementById('videoElement');
            const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });
            videoElement.srcObject = stream;
        } catch (err) {
            console.error('Error accessing media devices.', err);
        }
    }
    function takePicture() {
        const canvas = document.getElementById('canvasElement');
        const video = document.getElementById('videoElement');
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
        return canvas.toDataURL('image/png');
    }
</script>

@code {
    private async Task StartMedia()
    {
        await JSRuntime.InvokeVoidAsync("startMedia");
    }
    string imageUrl; // To store the captured image URL

    private async Task CaptureImage()
    {
        imageUrl = await JSRuntime.InvokeAsync<string>("takePicture");
        StateHasChanged(); // Refresh the UI to show the captured image
    }
}
